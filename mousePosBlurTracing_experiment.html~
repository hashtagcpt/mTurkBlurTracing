<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script src="https://timbrady.org/turk/TimTurkTools.js"></script>
 
<script>
// global tracing variables
var tracingX = []; 
var tracingY = [];

var trialRunning = false;
var trialCounter = 1;
nTrials = 10;


// works out the X, Y position of the click inside the canvas from the X, Y position on the page
function getPosition(mouseEvent, sigCanvas) {
    var x, y;
    if (mouseEvent.pageX != undefined && mouseEvent.pageY != undefined) {
        x = mouseEvent.pageX;
        y = mouseEvent.pageY;
        } 
    else {
        x = mouseEvent.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
        y = mouseEvent.clientY + document.body.scrollTop + document.documentElement.scrollTop;
     }
 
return { X: x - sigCanvas.offsetLeft, Y: y - sigCanvas.offsetTop };
}

function PressedEnd() {
	if (!trialRunning) {
		return;
	}
	NextTrial();
}
 
function NextTrial() {
	trialRunning = false;
	if (currentTrial < nTrials) {
		startTrial();
		currentTrial++;
	    } else {
          $('#thanks').show();          
          $('#submitButton').show();
          //document.forms[0].submit();
	}
} 
   
function startTrial() {
    $("#canvas1").show();
    // get references to the canvas element as well as the 2D drawing context
    var sigCanvas = document.getElementById("#canvas1");
    var context = sigCanvas.getContext("2d");
    context.strokeStyle = 'White';
 
    var img = document.getElementById("#canvas" + trialCounter);
         img.onload = function () {
         context.drawImage(img, 0, 0); }
      
// start drawing when the mousedown event fires, and attach handlers to draw a line to wherever the mouse moves
     $("#canvas1").mousedown(function (mouseEvent) {
       var position = getPosition(mouseEvent, sigCanvas);
       context.moveTo(position.X, position.Y);
       context.beginPath();
 
               // attach event handlers
               $(this).mousemove(function (mouseEvent) {
                  drawLine(mouseEvent, sigCanvas, context);
               }).mouseup(function (mouseEvent) {
                  finishDrawing(mouseEvent, sigCanvas, context);
               }).mouseout(function (mouseEvent) {
                  finishDrawing(mouseEvent, sigCanvas, context);
               });
            });
 
         }
      
 
      // draws a line to the x and y coordinates of the mouse event inside
      // the specified element using the specified context
      function drawLine(mouseEvent, sigCanvas, context) {

         var position = getPosition(mouseEvent, sigCanvas);
         
         // put positions in to a global variable
         tracingX.push(position.X);
         tracingY.push(position.Y);            
     
         context.lineTo(position.X, position.Y);
         context.stroke();
         context.lineWidth = 5;
      }
 
      // draws a line from the last coordiantes in the path to the finishing
      // coordinates and unbind any event handlers which need to be preceded
      // by the mouse down event

      function finishDrawing(mouseEvent, sigCanvas, context) {
         // draw the line to the finishing coordinates
         drawLine(mouseEvent, sigCanvas, context);
 
         context.closePath();
         // append -1 to indicate that drawing is done
         tracingX.push(-1);
         tracingY.push(-1);                  
         
         // unbind any events which could draw
         $(sigCanvas).unbind("mousemove")
                     .unbind("mouseup")
                     .unbind("mouseout");
      }

// document readying
      $(document).ready(function () {
      	$('#submitButton').hide();
        $('#thanks').hide();
        $(document).bind('keyup', 'q', NextTrial);
        StartTrial()
      });
</script>
      
    
<style>
#experiment {
	font-family: Arial, Helvetica;
}

#container {
	font-family: Arial, Helvetica;
}
</style>    

<a href="javascript:StartTrial()" id="startTrial"></a>    

<img id="im1" src="1.png" width="0" height="0">
<canvas id="canvas1" width="512" height="512"></canvas>

<img id="im2" src="2.png" width="0" height="0">
<canvas id="canvas2" width="512" height="517"></canvas>

<img id="im3" src="3.png" width="0" height="0">
<canvas id="canvas3" width="512" height="512"></canvas>

<img id="im4" src="4.png" width="0" height="0">
<canvas id="canvas4" width="512" height="506"></canvas>

<img id="im5" src="5.png" width="0" height="0">
<canvas id="canvas5" width="512" height="341"></canvas>

<img id="im6" src="6.png" width="0" height="0">
<canvas id="canvas6" width="512" height="384"></canvas>

<img id="im7" src="7.png" width="0" height="0">
<canvas id="canvas7" width="512" height="512"></canvas>

<img id="im8" src="8.png" width="0" height="0">
<canvas id="canvas8" width="512" height="351"></canvas>

<img id="im9" src="9.png" width="0" height="0">
<canvas id="canvas9" width="512" height="769"></canvas>

<img id="im10" src="10.png" width="0" height="0">
<canvas id="canvas10" width="512" height="384"></canvas>

<!--  
<div id="thanks">Thanks! Please submit:

<p>Please describe your monitor (Make/Model):</p>
<p><input type="text" name="monitor" value="" /></p>

<p>Approximate viewing distance to the screen:</p>
<p><input type="text" name="monitor" value="" /></p>

<p>Your web browser:</p>
<p><input type="text" name="webbrowser" value="" /></p>

<p>What is your age?</p>
<p><input type="text" name="age" value="" /></p>

<p>What is your gender?</p>
<p><input type="text" name="gender" value="" /></p>

<p>Location (Country)?</p>
<p><input type="text" name="location" value="" /></p>

<p>&nbsp;</p>
</div>     

-->

<!-- REMOVE ME BEFORE PUTTING ON TURK -->
<input type="submit" id="submitButton" name="submitButton">


